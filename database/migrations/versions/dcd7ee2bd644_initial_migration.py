"""Initial Migration

Revision ID: dcd7ee2bd644
Revises: 
Create Date: 2025-08-13 22:30:15.915728

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dcd7ee2bd644'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('telegram_id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('referral_code', sa.String(), nullable=False),
    sa.Column('sponsor_id', sa.Integer(), nullable=True),
    sa.Column('account_balance', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('total_deposited', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('total_withdrawn', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('total_referral_earnings', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['sponsor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_referral_code'), 'users', ['referral_code'], unique=True)
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('referral_commissions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('referred_user_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.String(), nullable=False),
    sa.Column('commission_type', sa.Enum('deposit', 'earning', 'custom', name='commissiontype'), nullable=False),
    sa.Column('amount_trx', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('percentage', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('status', sa.Enum('pending', 'paid', name='commissionstatus'), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['referred_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_referral_commissions_id'), 'referral_commissions', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('deposit', 'withdrawal', 'referral_commission', 'fee', 'custom', name='transactiontype'), nullable=False),
    sa.Column('amount_trx', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('status', sa.Enum('pending', 'completed', 'failed', name='transactionstatus'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('reference_id', sa.String(), nullable=True),
    sa.Column('tx_hash', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_table('user_wallets',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('private_key_encrypted', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address')
    )
    op.create_index(op.f('ix_user_wallets_id'), 'user_wallets', ['id'], unique=False)
    op.create_table('withdrawals',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount_trx', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('fee_trx', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('to_address', sa.String(), nullable=False),
    sa.Column('tx_hash', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'processing', 'completed', 'failed', name='withdrawalstatus'), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_withdrawals_id'), 'withdrawals', ['id'], unique=False)
    op.create_table('deposits',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('wallet_id', sa.Integer(), nullable=False),
    sa.Column('tx_hash', sa.String(), nullable=False),
    sa.Column('amount_trx', sa.Numeric(precision=18, scale=6), nullable=False),
    sa.Column('confirmations', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'confirmed', 'failed', name='depositstatus'), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['user_wallets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tx_hash')
    )
    op.create_index(op.f('ix_deposits_id'), 'deposits', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_deposits_id'), table_name='deposits')
    op.drop_table('deposits')
    op.drop_index(op.f('ix_withdrawals_id'), table_name='withdrawals')
    op.drop_table('withdrawals')
    op.drop_index(op.f('ix_user_wallets_id'), table_name='user_wallets')
    op.drop_table('user_wallets')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_referral_commissions_id'), table_name='referral_commissions')
    op.drop_table('referral_commissions')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_index(op.f('ix_users_referral_code'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
